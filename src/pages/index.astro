---
import Navbar from "../components/navbar.astro";
import Experience from "../components/experience.astro";
import Home from "../components/home.astro";
import Layout from "../layouts/Layout.astro";
import "aos/dist/aos.css";
import Technologies from "../components/technologies.astro";
import Projects from "../components/projects.astro";
import AboutMe from "../components/aboutMe.astro";
---

<Layout>
  <Navbar onClick={(e: any) => e.stopPropagation()} />
  <Home />
  <AboutMe/>
  <div
    class="absolute bottom-1 lg:bottom-14 w-full flex justify-center animate-bounce"
  >
    <button id="scroll-button" class="focus:outline-none">
      <img src="/down.svg" alt="down icon" class="w-20 cursor-pointer" />
    </button>
  </div>
  <div id="experience">
    <Experience />
  </div>

  <Projects />

  <Technologies />

  <script>
    document.getElementById("scroll-button").addEventListener("click", () => {
      const target = document.getElementById("experience");
      const offset = 100;
      const targetPosition = target
        ? target.getBoundingClientRect().top + window.scrollY - offset
        : 0;

      if (targetPosition !== undefined) {
        window.scrollTo({ top: targetPosition, behavior: "smooth" });
      }
    });
  </script>
</Layout>

<script>
  import { animate, stagger } from "motion";

  animate(".icons li", { opacity: 1, y: [50, 0] }, { delay: stagger(0.05) });
  animate(".name", { opacity: [0, 1], x: [-100, 0] }, { delay: stagger(0.1) });
  animate(".title", { opacity: [0, 1], y: [50, 0] }, { delay: 0.5 });
  animate(".profile", { opacity: [0, 1], scale: [0.8, 1] }, { delay: 0.5 });

  document.addEventListener("DOMContentLoaded", () => {
    const experience = document.querySelector("#experience");
    const button = document.querySelector("#scroll-button") as HTMLElement;

    // const observer = new IntersectionObserver(
    //   (entries) => {
    //     entries.forEach((entry) => {
    //       if (entry.isIntersecting && button) {
    //         button.style.display = "none";
    //       } else {
    //         button.style.display = "flex";
    //       }
    //     });
    //   },
    //   { threshold: 0.1 }
    // );

    // if (experience) {
    //   observer.observe(experience);
    // }
  });
</script>
